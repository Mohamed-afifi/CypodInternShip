Task 2:

Write an “abstract” class: Box, it should include these methods at a minimum:1) add, for adding any number of items to the box, 2)empty, for taking all the items out of the box and returning them as a list, and 3)count, for counting the items which are currently in the box. Write an Item class which has a name (string) and a value(integer) attributes–all the items you will use will be Item objects. Write two subclasses of Box which use different underlying collections to store items: ListBox should use a list, and DictBox should use a dict.

 

Write a function, repack_boxes, which takes any number of boxes as parameters, gathers up all the items they contain, and redistributes them as evenly as possible over all the boxes. Order is unimportant. There are multiple ways of doing this. Test your code with a ListBox with 20 items, a ListBox with 9 items and a DictBox with 5 items. You should end up with two boxes with 11 items each, and one box with 12 items.

 

This is a simple task so don’t use and file input or interactive command line inputs, make it simple and complete the testing by instantiating your needed objects in python files.

 

You should employ proper error handling when initializing Item objects to ensure proper input types and when calling repack_boxes.